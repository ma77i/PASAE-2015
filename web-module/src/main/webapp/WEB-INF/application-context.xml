<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:sec="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<import resource="classpath:service-context.xml"/>

    <mvc:annotation-driven >
<!--     	<mvc:message-converters> -->
<!--     		<ref bean="jackson2HttpMessageConverter" /> -->
<!--     	</mvc:message-converters> -->
    </mvc:annotation-driven>

    <context:annotation-config/>

    <sec:http entry-point-ref="restAuthenticationEntryPoint">
        <sec:intercept-url pattern="/**" access="ROLE_ADMIN"/>
        <sec:custom-filter ref="customFilter" position="FORM_LOGIN_FILTER"/>
        <sec:logout/>
    </sec:http>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="simpleAuthenticationProvider"/>
    </sec:authentication-manager>

    <bean id="customFilter"
    class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="successHandler"/>
        <property name="authenticationFailureHandler" ref="failureHandler"/>
        <property name="passwordParameter" value="password"/>
        <property name="usernameParameter" value="username"/>
        <property name="requiresAuthenticationRequestMatcher">
            <bean class="ar.edu.uai.paradigms.authentication.CustomUrlRequestMatcher">
                <constructor-arg name="filterProcessesUrl" value="/login" />
            </bean>
        </property>
    </bean>
    <bean id="restAuthenticationEntryPoint"
        class="ar.edu.uai.paradigms.authentication.RestAuthenticationEntryPoint"/>
    <bean id="successHandler"
        class="ar.edu.uai.paradigms.authentication.SavedRequestAwareAuthenticationSuccessHandler"/>
    <bean id="simpleAuthenticationProvider"
        class="ar.edu.uai.paradigms.authentication.SimpleAuthenticationProvider"/>
    <bean id="failureHandler"
        class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>

    <bean id="jackson2HttpMessageConverter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>

<!--     Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:ar/edu/uai/config.properties</value>
		</property>
	</bean>
	<bean id="espectadorController" class="ar.edu.uai.paradigms.controller.EspectadorController">
		<constructor-arg name="espectadorService" ref="espectadorService"/>
		<constructor-arg name="espectadorTranslator" ref="espectadorTranslator"/>
	</bean>
	<bean id="espectadorTranslator" class="ar.edu.uai.paradigms.translator.EspectadorTranslator" />

	<bean id="empleadoController" class="ar.edu.uai.paradigms.controller.EmpleadoController">
		<constructor-arg name="empleadoService" ref="empleadoService"/>
		<constructor-arg name="empleadoTranslator" ref="empleadoTranslator"/>
	</bean>
	<bean id="empleadoTranslator" class="ar.edu.uai.paradigms.translator.EmpleadoTranslator" />

	<bean id="administradorController" class="ar.edu.uai.paradigms.controller.AdministradorController">
		<constructor-arg name="administradorService" ref="administradorService"/>
		<constructor-arg name="administradorTranslator" ref="administradorTranslator"/>
	</bean>

	<bean id="administradorTranslator" class="ar.edu.uai.paradigms.translator.AdministradorTranslator" />

	<bean id="ventaController" class="ar.edu.uai.paradigms.controller.VentaController">
		<constructor-arg name="ventaService" ref="ventaService"/>
		<constructor-arg name="ventaTranslator" ref="ventaTranslator"/>
	</bean>

	<bean id="ventaTranslator" class="ar.edu.uai.paradigms.translator.VentaTranslator" />

	<bean id="espectaculoController" class="ar.edu.uai.paradigms.controller.EspectaculoController">
		<constructor-arg name="espectaculoService" ref="espectaculoService"/>
		<constructor-arg name="espectaculoTranslator" ref="espectaculoTranslator"/>
	</bean>

	<bean id="espectaculoTranslator" class="ar.edu.uai.paradigms.translator.EspectaculoTranslator" />

    <bean id="sectorController" class="ar.edu.uai.paradigms.controller.SectorController" >
        <constructor-arg name="sectorService" ref="sectorService"/>
        <constructor-arg name="sectorTranslator" ref="sectorTranslator"/>
        <constructor-arg name="asientoTranslator" ref="asientoTranslator" />
    </bean>

    <bean id="sectorTranslator" class="ar.edu.uai.paradigms.translator.SectorTranslator" />

    <bean id="asientoTranslator" class="ar.edu.uai.paradigms.translator.AsientoTranslator" />


    <bean id="httpErrorMessageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:basename="classpath:/ar/edu/uai/messages"
          p:defaultEncoding="UTF-8" />

    <bean id="restExceptionResolver"
          class="cz.jirutka.spring.exhandler.RestHandlerExceptionResolverFactoryBean">
        <property name="messageSource" ref="httpErrorMessageSource" />
        <property name="defaultContentType" value="application/json" />
        <property name="exceptionHandlers">
            <map>
                <entry key="ar.edu.uai.paradigms.service.UsuarioService.MyException" value="404" />
            </map>
        </property>
    </bean>

    <bean id="exceptionHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" />

    <bean id="compositeExceptionResolver"
          class="org.springframework.web.servlet.handler.HandlerExceptionResolverComposite">
        <property name="order" value="0" />
        <property name="exceptionResolvers">
            <list>
                <ref bean="exceptionHandlerExceptionResolver" />
                <ref bean="restExceptionResolver" />
            </list>
        </property>
    </bean>



</beans>
