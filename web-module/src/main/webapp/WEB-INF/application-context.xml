<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:sec="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <import resource="classpath:service-context.xml"/>

      <mvc:annotation-driven>
        <!--     	<mvc:message-converters> -->
        <!--     		<ref bean="jackson2HttpMessageConverter" /> -->
        <!--     	</mvc:message-converters> -->
      </mvc:annotation-driven>

    <context:annotation-config/>
        <sec:http entry-point-ref="restAuthenticationEntryPoint">
        <sec:intercept-url pattern="/administrador/*" access="ROLE_ADMINISTRADOR"/>
        <sec:intercept-url pattern="/sector/*" access="ROLE_ADMINISTRADOR"/>
        <sec:intercept-url pattern="/teatro/*" access="ROLE_ADMINISTRADOR"/>
        <sec:intercept-url pattern="/funcion/*" access="ROLE_ADMINISTRADOR,ROLE_EMPLEADO"/>

        <!--<sec:intercept-url pattern="/venta/*" access="ROLE_ADMINISTRADOR"/>-->
        <sec:intercept-url pattern="/empleado/*" access="ROLE_ADMINISTRADOR"/>
        <sec:intercept-url pattern="/empleado/cambiardatospersonales/*" access="ROLE_EMPLEADO"/>
        <sec:intercept-url pattern="/empleado/cambiarestado/*" access="ROLE_ADMINISTRADOR"/>
        <sec:intercept-url pattern="/espectador/cambiardatospersonales/*" access="ROLE_ESPECTADOR"/>
        <sec:intercept-url pattern="/espectador/cambiarestado/*" access="ROLE_ADMINISTRADOR,ROLE_EMPLEADO"/>
        <sec:intercept-url pattern="/teatro/*" access="ROLE_ADMINISTRADOR"/>
        <sec:custom-filter ref="customFilter" position="FORM_LOGIN_FILTER"/>
        <sec:logout  invalidate-session="true" logout-url="/logout" success-handler-ref="logoutSuccessHandler" />
    </sec:http>

    <bean id="logoutSuccessHandler" class="ar.edu.uai.paradigms.authentication.LogoutSuccessHandler" >
	    <constructor-arg value="/logout" />
	</bean>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="simpleAuthenticationProvider"/>
    </sec:authentication-manager>

    <bean id="customFilter"
    class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="successHandler"/>
        <property name="authenticationFailureHandler" ref="failureHandler"/>
        <property name="passwordParameter" value="password"/>
        <property name="usernameParameter" value="username"/>
        <property name="requiresAuthenticationRequestMatcher">
            <bean class="ar.edu.uai.paradigms.authentication.CustomUrlRequestMatcher">
                <constructor-arg name="filterProcessesUrl" value="/login" />
            </bean>
        </property>
    </bean>
    <bean id="restAuthenticationEntryPoint"
        class="ar.edu.uai.paradigms.authentication.RestAuthenticationEntryPoint"/>
    <bean id="successHandler"
        class="ar.edu.uai.paradigms.authentication.SavedRequestAwareAuthenticationSuccessHandler"/>
    <bean id="simpleAuthenticationProvider"
          class="ar.edu.uai.paradigms.authentication.SimpleAuthenticationProvider">
        <constructor-arg name="loginService" ref="loginService"/>
    </bean>
    <bean id="failureHandler"
        class="ar.edu.uai.paradigms.authentication.SavedRequestAwareAuthenticationFailureHandler"/>

    <bean id="jackson2HttpMessageConverter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>


<!--     Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

    <!-- <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
         <property name="registerDefaultFormatters" value="true"/>
         <property name="formatterRegistrars">
             <set>
                 &lt;!&ndash; Format DateTime as ISO format &ndash;&gt;
                 <bean class="org.springframework.format.datetime.standard.DateTimeFormatterRegistrar">
                     <property name="dateFormatter">
                         <bean class="org.springframework.format.datetime.standard.DateTimeFormatterFactoryBean">
                             <property name="iso" value="DATE"/>
                         </bean>
                     </property>
                 </bean>
             </set>
         </property>
     </bean>-->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:ar/edu/uai/config.properties</value>
		</property>
	</bean>
	<bean id="espectadorController" class="ar.edu.uai.paradigms.controller.EspectadorController">
		<constructor-arg name="espectadorService" ref="espectadorServiceConcreta"/>
		<constructor-arg name="espectadorTranslator" ref="espectadorTranslator"/>
        <constructor-arg name="tarjetaService" ref="tarjetaService"/>
       <constructor-arg name="transaccionTranslator" ref="transaccionTranslator"/>
	</bean>

	<bean id="empleadoController" class="ar.edu.uai.paradigms.controller.EmpleadoController">
		<constructor-arg name="empleadoService" ref="empleadoServiceConcreta"/>
		<constructor-arg name="empleadoTranslator" ref="empleadoTranslator"/>
	</bean>
	<bean id="empleadoTranslator" class="ar.edu.uai.paradigms.translator.EmpleadoTranslator" />

	<bean id="administradorController" class="ar.edu.uai.paradigms.controller.AdministradorController">
		<constructor-arg name="administradorService" ref="administradorServiceConcreta"/>
		<constructor-arg name="administradorTranslator" ref="administradorTranslator"/>
	</bean>

	<bean id="administradorTranslator" class="ar.edu.uai.paradigms.translator.AdministradorTranslator" />

	<bean id="ventaController" class="ar.edu.uai.paradigms.controller.VentaController">
		<constructor-arg name="ventaService" ref="ventaService"/>
        <constructor-arg name="estadisticaService" ref="estadisticaService"/>
		<constructor-arg name="ventaTranslator" ref="ventaTranslator"/>
        <constructor-arg name="compraTranslator" ref="compraTranslator"/>
	</bean>

	<bean id="ventaTranslator" class="ar.edu.uai.paradigms.translator.VentaTranslator">
       <property name="espectadorService" ref="espectadorServiceConcreta"/>
       <property name="espectaculoService" ref="espectaculoService"/>
       <property name="tarjetaService" ref="tarjetaService"/>
    </bean>

    <bean id="espectaculoController" class="ar.edu.uai.paradigms.controller.EspectaculoController">
		<constructor-arg name="espectaculoService" ref="espectaculoService"/>
		<constructor-arg name="espectaculoTranslator" ref="espectaculoTranslator"/>
        <constructor-arg name="funcionService" ref="funcionService"/>
        <constructor-arg name="funcionTranslator" ref="funcionTranslator"/>
	</bean>

    <bean id="espectaculoTranslator" class="ar.edu.uai.paradigms.translator.EspectaculoTranslator"/>

    <bean id="sectorController" class="ar.edu.uai.paradigms.controller.SectorController" >
        <constructor-arg name="sectorService" ref="sectorService"/>
        <constructor-arg name="sectorTranslator" ref="sectorTranslator"/>
        <constructor-arg name="asientoTranslator" ref="asientoTranslator" />
        <constructor-arg name="sectoresTranslator" ref="sectoresTranslator" />
    </bean>

    <bean id="tarjetaController" class="ar.edu.uai.paradigms.controller.TarjetaController">
        <constructor-arg name="tarjetaService" ref="tarjetaService"/>
        <constructor-arg name="tarjetaTranslator" ref="tarjetaTranslator"/>
    </bean>

    <bean id="funcionController" class="ar.edu.uai.paradigms.controller.FuncionController">
        <constructor-arg name="funcionService" ref="funcionService"/>
        <constructor-arg name="funcionTranslator" ref="funcionTranslator"/>
    </bean>

    <bean id="categoriaController" class="ar.edu.uai.paradigms.controller.CategoriaController">
        <constructor-arg name="categoriaService" ref="categoriaService"/>
        <constructor-arg name="categoriaTranslator" ref="categoriaTranslator"/>
    </bean>

    <bean id="teatroController" class="ar.edu.uai.paradigms.controller.TeatroController">
        <constructor-arg name="teatroService" ref="teatroService"/>
        <constructor-arg name="teatroTranslator" ref="teatroTranslator"/>

    </bean>

    <bean id="FilaController" class="ar.edu.uai.paradigms.controller.FilaController">
        <constructor-arg name="filaService" ref="filaService"/>
        <constructor-arg name="filaTranslator" ref="filaTranslator"/>
    </bean>

    <bean id="AsientoController" class="ar.edu.uai.paradigms.controller.AsientoController">
        <constructor-arg name="asientoService" ref="asientoService"/>
        <constructor-arg name="asientoTranslator" ref="asientoTranslator"/>
    </bean>

    <bean id="defaultController" class="ar.edu.uai.paradigms.controller.DefaultController" />


    <bean id="httpErrorMessageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:basename="classpath:/ar/edu/uai/messages"
          p:defaultEncoding="UTF-8" />

    <bean id="restExceptionResolver"
          class="cz.jirutka.spring.exhandler.RestHandlerExceptionResolverFactoryBean">
        <property name="messageSource" ref="httpErrorMessageSource" />
        <property name="defaultContentType" value="application/json" />
        <property name="exceptionHandlers">
            <map>
                <entry key="ar.edu.uai.paradigms.ex.CustomResourceNotFoundEx" value="404" />
                <entry key="ar.edu.uai.paradigms.ex.CustomUnauthorizedEx" value="401" />
                <entry key="ar.edu.uai.paradigms.ex.CustomLockingFailureEx" value="409"/>
                <entry key="ar.edu.uai.paradigms.ex.CustomQueryEx" value="500"/>
                <entry key="ar.edu.uai.paradigms.ex.CustomUnexpectedEx" value="500"/>
                <entry key="ar.edu.uai.paradigms.ex.CustomValidationEx" value="200"/>
            </map>
        </property>
    </bean>

    <bean id="exceptionHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" />

    <bean id="compositeExceptionResolver"
          class="org.springframework.web.servlet.handler.HandlerExceptionResolverComposite">
        <property name="order" value="0" />
        <property name="exceptionResolvers">
            <list>
                <ref bean="exceptionHandlerExceptionResolver" />
                <ref bean="restExceptionResolver" />
            </list>
        </property>

    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="10000000"/>

    </bean>


    <bean id="sectorTranslator" class="ar.edu.uai.paradigms.translator.SectorTranslator" />

    <bean id="asientoTranslator" class="ar.edu.uai.paradigms.translator.AsientoTranslator" />

    <bean id="tarjetaTranslator" class="ar.edu.uai.paradigms.translator.TarjetaTranslator"/>

    <bean id="funcionTranslator" class="ar.edu.uai.paradigms.translator.FuncionTranslator"/>

    <bean id="categoriaTranslator" class="ar.edu.uai.paradigms.translator.CategoriaTranslator"/>

    <bean id="teatroTranslator" class="ar.edu.uai.paradigms.translator.TeatroTranslator"/>

    <bean id="filaTranslator" class="ar.edu.uai.paradigms.translator.FilaTranslator"/>

    <bean id="transaccionTranslator" class="ar.edu.uai.paradigms.translator.TransaccionTranslator"/>

    <bean id="espectadorTranslator" class="ar.edu.uai.paradigms.translator.EspectadorTranslator" />

    <bean id="sectoresTranslator" class="ar.edu.uai.paradigms.translator.SectoresTranslator">
        <constructor-arg name="sectorTranslator" ref="sectorTranslator"/>
    </bean>

    <bean id="compraTranslator" class="ar.edu.uai.paradigms.translator.CompraTranslator"/>

</beans>
